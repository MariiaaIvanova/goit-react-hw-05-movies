{"version":3,"file":"static/js/736.ec88f7df.chunk.js","mappings":"iRAEaA,E,QAAOC,EAAAA,GAAH,wG,mBCuDjB,EAlDa,WACX,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA4BJ,EAAAA,EAAAA,WAAS,GAArC,eAAOK,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAoBR,OAlBAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEwBC,EAAAA,EAAAA,IAAiBH,GAFzC,UAGyB,KADfN,EAFV,QAGcU,OAHd,uBAIMP,GAAS,GAJf,mBAKaQ,EAAAA,EAAAA,IAAM,+CALnB,OAOIV,EAASD,GAPb,kDASIY,QAAQC,IAAR,MATJ,yBAWIR,GAAU,GAXd,8EADc,uBAAC,WAAD,wBAedS,EACD,GAAE,CAACR,KAGF,gCACGN,IACC,SAACH,EAAD,UACGG,EAAMe,KAAI,SAAAC,GAAI,OACb,2BACE,gBACEC,IACED,EAAKE,aAAL,yCACsCF,EAAKE,cACvC,2DAENC,IAAKH,EAAKI,KACVC,MAAM,SAER,wBAAKL,EAAKI,QACV,yBAAG,cAAYJ,EAAKM,eAXbN,EAAKO,QADD,MAiBlBrB,IAAS,uBAAG,uCACZE,IAAU,SAACoB,EAAA,EAAD,MAGhB,C,kMCtDKC,EAAU,mCACVC,EAAW,gCAEJC,EAAiB,mCAAG,oGACNC,EAAAA,EAAAA,IAAA,UAAaF,EAAb,sBAA2C,CAC9DG,OAAQ,CACJC,QAASL,EACTM,SAAU,WAJW,cACvBC,EADuB,yBAOtBA,EAASC,KAAKC,SAPQ,2CAAH,qDAUjBC,EAAe,mCAAG,WAAMC,GAAN,uFACJR,EAAAA,EAAAA,IAAA,UAAaF,EAAb,gBAAqC,CACxDG,OAAQ,CACJC,QAASL,EACTM,SAAU,QACVK,MAAOA,KALY,cACrBJ,EADqB,yBAQpBA,EAASC,KAAKC,SARM,2CAAH,sDAWfG,EAAgB,mCAAG,WAAMC,GAAN,uFACLV,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA8BY,GAAM,CACvDT,OAAQ,CACJC,QAASL,EACTM,SAAU,WAJU,cACtBC,EADsB,yBAOrBA,EAASC,MAPY,2CAAH,sDAUhBM,EAAgB,mCAAG,WAAMD,GAAN,uFACLV,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA8BY,EAA9B,YAA4C,CAC/DT,OAAQ,CACJC,QAASL,EACTM,SAAU,WAJU,cACtBC,EADsB,yBAOvBA,EAASC,KAAKC,SAPS,2CAAH,sDAUhBzB,EAAgB,mCAAG,WAAM6B,GAAN,uFACPV,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA8BY,EAA9B,YAA4C,CACjET,OAAQ,CACNC,QAASL,EACTM,SAAU,QACTS,KAAM,KALmB,cACxBR,EADwB,yBASvBA,EAASC,KAAKjB,MATS,2CAAH,qD","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","components/services/apiService.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 20px;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getCreditsMovies } from 'components/services/apiService';\nimport { Loader } from 'components/Loader/Loader';\nimport { List } from './Cast.styled';\nimport { toast } from 'react-hot-toast';\n\nconst Cast = () => {\n  const [casts, setCasts] = useState([]);\n  const [error, setError] = useState(false);\n  const [loader, setLoader] = useState(true);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function fetchCasts() {\n      try {\n        const casts = await getCreditsMovies(movieId);\n        if (casts.length === 0) {\n          setError(true);\n          return toast('There are no cast! Please, try again later');\n        }\n        setCasts(casts);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoader(false);\n      }\n    }\n    fetchCasts();\n  }, [movieId]);\n\n  return (\n    <>\n      {casts && (\n        <List>\n          {casts.map(cast => (\n            <li key={cast.cast_id}>\n              <img\n                src={\n                  cast.profile_path\n                    ? `https://image.tmdb.org/t/p/w500${cast.profile_path}`\n                    : 'https://via.placeholder.com/100x150?text=Photo+Not+Found'\n                }\n                alt={cast.name}\n                width=\"200\"\n              />\n              <h4>{cast.name}</h4>\n              <p>Character: {cast.character}</p>\n            </li>\n          ))}\n        </List>\n      )}\n      {error && <p>We don't have cast for this movie </p>}\n      {loader && <Loader />}\n    </>\n  );\n};\nexport default Cast;\n\n\n\n\n","import axios from 'axios';\n\nconst API_KEY = 'feafde17f0d0230d9e73e9fe3d719207';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async () => {\n    const response = await axios.get(`${BASE_URL}trending/movie/day`, {\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n        },\n    });\n    return response.data.results;\n};\n\nexport const getSearchMovies = async query => {\n    const response = await axios.get(`${BASE_URL}search/movie`, {\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n            query: query,\n        },\n    });\n    return response.data.results;\n};\n\nexport const getDetailsMovies = async id => {\n    const response = await axios.get(`${BASE_URL}movie/${id}`, {\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n        },\n    });\n    return response.data;\n};\n\nexport const getReviewsMovies = async id => {\n    const response = await axios.get(`${BASE_URL}movie/${id}/reviews`, {\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n        },\n    });\n  return response.data.results;\n};\n\nexport const getCreditsMovies = async id => {\n  const response = await axios.get(`${BASE_URL}movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n       page: 1,\n    },\n  });\n\n  return response.data.cast;\n};"],"names":["List","styled","useState","casts","setCasts","error","setError","loader","setLoader","movieId","useParams","useEffect","getCreditsMovies","length","toast","console","log","fetchCasts","map","cast","src","profile_path","alt","name","width","character","cast_id","Loader","API_KEY","BASE_URL","getTrendingMovies","axios","params","api_key","language","response","data","results","getSearchMovies","query","getDetailsMovies","id","getReviewsMovies","page"],"sourceRoot":""}
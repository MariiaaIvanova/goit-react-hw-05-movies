{"version":3,"file":"static/js/186.492fba8f.chunk.js","mappings":"kPA+CA,UAzCgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA4BF,EAAAA,EAAAA,WAAS,GAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAA0BJ,EAAAA,EAAAA,WAAS,GAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAsBR,OApBAE,EAAAA,EAAAA,YAAU,WAAM,wCAGd,8GAE0BC,EAAAA,EAAAA,IAAiBH,GAF3C,UAG2B,KADjBN,EAFV,QAGgBU,OAHhB,uBAIML,GAAS,GAJf,mBAKaM,EAAAA,EAAAA,IAAM,gCALnB,OAOIV,EAAWD,GAPf,kDASIY,QAAQC,IAAR,MATJ,yBAWIV,GAAU,GAXd,8EAHc,sBACdA,GAAU,GADI,mCAiBdW,EACD,GAAE,CAACR,KAGF,iCACE,wBACGN,EAAQe,KAAI,SAAAC,GAAM,OACjB,2BACE,0BAAI,WAASA,EAAOC,WACpB,uBAAID,EAAOE,YAFJF,EAAOG,GADC,MAOpBf,IAAS,uBAAG,yCACZF,IAAU,SAAC,IAAD,MAGhB,C,kMC5CKkB,EAAU,mCACVC,EAAW,gCAEJC,EAAiB,mCAAG,oGACNC,EAAAA,EAAAA,IAAA,UAAaF,EAAb,sBAA2C,CAC9DG,OAAQ,CACJC,QAASL,EACTM,SAAU,WAJW,cACvBC,EADuB,yBAOtBA,EAASC,KAAKC,SAPQ,2CAAH,qDAUjBC,EAAe,mCAAG,WAAMC,GAAN,uFACJR,EAAAA,EAAAA,IAAA,UAAaF,EAAb,gBAAqC,CACxDG,OAAQ,CACJC,QAASL,EACTM,SAAU,QACVK,MAAOA,KALY,cACrBJ,EADqB,yBAQpBA,EAASC,KAAKC,SARM,2CAAH,sDAWfG,EAAgB,mCAAG,WAAMb,GAAN,uFACLI,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA8BF,GAAM,CACvDK,OAAQ,CACJC,QAASL,EACTM,SAAU,WAJU,cACtBC,EADsB,yBAOrBA,EAASC,MAPY,2CAAH,sDAUhBnB,EAAgB,mCAAG,WAAMU,GAAN,uFACLI,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA8BF,EAA9B,YAA4C,CAC/DK,OAAQ,CACJC,QAASL,EACTM,SAAU,WAJU,cACtBC,EADsB,yBAOvBA,EAASC,KAAKC,SAPS,2CAAH,sDAUhBI,EAAgB,mCAAG,WAAMd,GAAN,uFACPI,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA8BF,EAA9B,YAA4C,CACjEK,OAAQ,CACNC,QAASL,EACTM,SAAU,QACTQ,KAAM,KALmB,cACxBP,EADwB,yBASvBA,EAASC,KAAKO,MATS,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","components/services/apiService.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\nimport { getReviewsMovies } from 'components/services/apiService';\nimport { toast } from 'react-hot-toast';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [loader, setLoader] = useState(true);\n  const [error, setError] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setLoader(true);\n\n    async function fetchReviews() {\n      try {\n        const reviews = await getReviewsMovies(movieId);\n        if (reviews.length === 0) {\n          setError(true);\n          return toast('Sorry, there are no reviews');\n        }\n        setReviews(reviews);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoader(false);\n      }\n    }\n    fetchReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      <ul>\n        {reviews.map(review => (\n          <li key={review.id}>\n            <h4>Author: {review.author}</h4>\n            <p>{review.content}</p>\n          </li>\n        ))}\n      </ul>\n      {error && <p>We don't have reviews for this movie</p>}\n      {loader && <Loader />}\n    </>\n  );\n};\nexport default Reviews;\n\n\n\n\n\n","import axios from 'axios';\n\nconst API_KEY = 'feafde17f0d0230d9e73e9fe3d719207';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async () => {\n    const response = await axios.get(`${BASE_URL}trending/movie/day`, {\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n        },\n    });\n    return response.data.results;\n};\n\nexport const getSearchMovies = async query => {\n    const response = await axios.get(`${BASE_URL}search/movie`, {\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n            query: query,\n        },\n    });\n    return response.data.results;\n};\n\nexport const getDetailsMovies = async id => {\n    const response = await axios.get(`${BASE_URL}movie/${id}`, {\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n        },\n    });\n    return response.data;\n};\n\nexport const getReviewsMovies = async id => {\n    const response = await axios.get(`${BASE_URL}movie/${id}/reviews`, {\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n        },\n    });\n  return response.data.results;\n};\n\nexport const getCreditsMovies = async id => {\n  const response = await axios.get(`${BASE_URL}movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n       page: 1,\n    },\n  });\n\n  return response.data.cast;\n};"],"names":["useState","reviews","setReviews","loader","setLoader","error","setError","movieId","useParams","useEffect","getReviewsMovies","length","toast","console","log","fetchReviews","map","review","author","content","id","API_KEY","BASE_URL","getTrendingMovies","axios","params","api_key","language","response","data","results","getSearchMovies","query","getDetailsMovies","getCreditsMovies","page","cast"],"sourceRoot":""}
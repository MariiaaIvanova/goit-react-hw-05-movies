{"version":3,"file":"static/js/338.e877f6de.chunk.js","mappings":"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","sources":["components/pages/MovieDetails.styled.jsx","components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","components/pages/MovieDetails.jsx","components/services/apiService.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Title = styled.h3`\n  font-weight: 600;\n  font-size: 24px;\n  line-height: calc(16 / 24);\n  margin-bottom: 25px;\n`;\n\nexport const ListInfo = styled.ul`\n  margin-bottom: 25px;\n`;\n\nexport const LinkInfo = styled(Link)`\n  text-decoration: none;\n  font-weight: 600;\n  font-size: 17px;\n  color: black;\n  margin: 20px;\n  &:hover {\n    color: #4158d0;\n  }\n`;\n\nexport const Button = styled.button`\n  padding: 5px 5px;\n  font: inherit;\n  cursor: pointer;\n  border-radius: 7px;\n  border: 3px solid #191d1e;\n  color: #191d1e;\n  font-weight: 600;\n  font-size: 15px;\n  &:hover {\n    color: #4158d0;\n    border: 3px solid #4158d0;\n  }\n   margin-bottom: 25px;\n`;","import styled from '@emotion/styled';\n\nexport const CardFilms = styled.div`\n  display: flex;\n  margin-bottom: 25px;\n`;\n\nexport const CardInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  text-align: initial;\n\n  max-width: 450px;\n\n  margin-left: 20px;\n`;","import { CardFilms, CardInfo } from './MovieCard.styled';\n\nconst MovieCard = ({ poster, title, year, vote, overview, genres }) => {\n  return (\n    <CardFilms>\n      <img src={poster} alt={title} width=\"250\" />\n      <CardInfo>\n        <h2>\n          {title} ({year})\n        </h2>\n        <p>User Score: {vote}%</p>\n        <h3>Overview</h3>\n        <p>{overview}</p>\n        <h3>Genres</h3>\n        <p>{genres}</p>\n      </CardInfo>\n    </CardFilms>\n  );\n};\n\nexport default MovieCard;","import { useState, useEffect, Suspense } from 'react';\nimport { useParams, useLocation, useNavigate, Outlet } from 'react-router-dom';\nimport { getDetailsMovies } from 'components/services/apiService';\nimport { Loader } from 'components/Loader/Loader';\nimport { ListInfo, LinkInfo, Title, Button } from './MovieDetails.styled';\nimport  MovieCard  from 'components/MovieCard/MovieCard';\nimport { toast } from 'react-hot-toast';\n\nconst MovieDetails = () => {\n  const [loader, setLoader] = useState(true);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [previousRoute, setPreviousRoute] = useState('/');\n  const [movieDetails, setMovieDetails] = useState({\n    backdrop_path: '',\n    genres: [],\n    overview: '',\n    poster_path: '',\n    release_date: '',\n    title: '',\n    vote_average: '',\n  });\n\n  useEffect(() => {\n    async function fetchMovieDetails() {\n      try {\n        const movieDetails = await getDetailsMovies(movieId);\n\n        if (Object.keys(movieDetails).length === 0) {\n          return toast('Sorry, movie not found! Please try again');\n        }\n        setMovieDetails(movieDetails);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoader(false);\n      }\n    }\n\n    fetchMovieDetails();\n\n    if (location.state && location.state.from) {\n      setPreviousRoute(location.state.from);\n    }\n  }, [movieId, location.state]);\n\n  const onGoBack = () => {\n    navigate(previousRoute);\n  };\n\n  const { poster_path, title, release_date, vote_average, overview, genres } =\n    movieDetails;\n\n  const poster = poster_path ? `https://image.tmdb.org/t/p/w500${poster_path}` : 'https://via.placeholder.com/200x300?text=Poster+Not+Found';\n  const year = release_date.slice(0, 4);\n  const vote = Math.floor(vote_average * 10);\n  const movieGenres = genres.map(genre => genre.name).join(', ');\n\n  return (\n    <>\n      <main>\n        <Button type=\"button\" onClick={onGoBack}>\n            Go back\n        </Button>\n        {movieDetails && (\n          <MovieCard\n            title={title}\n            year={year}\n            poster={poster}\n            vote={vote}\n            overview={overview}\n            genres={movieGenres}\n          />\n        )}\n\n        <Title>Additional information</Title>\n        <ListInfo>\n          <LinkInfo to=\"cast\">Cast</LinkInfo>\n          <LinkInfo to=\"reviews\">Reviews</LinkInfo>\n        </ListInfo>\n\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n      </main>\n      {loader && <Loader />}\n    </>\n  );\n};\n\nexport default MovieDetails;\n\n\n\n\n","import axios from 'axios';\n\nconst API_KEY = 'feafde17f0d0230d9e73e9fe3d719207';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async () => {\n    const response = await axios.get(`${BASE_URL}trending/movie/day`, {\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n        },\n    });\n    return response.data.results;\n};\n\nexport const getSearchMovies = async query => {\n    const response = await axios.get(`${BASE_URL}search/movie`, {\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n            query: query,\n        },\n    });\n    return response.data.results;\n};\n\nexport const getDetailsMovies = async id => {\n    const response = await axios.get(`${BASE_URL}movie/${id}`, {\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n        },\n    });\n    return response.data;\n};\n\nexport const getReviewsMovies = async id => {\n    const response = await axios.get(`${BASE_URL}movie/${id}/reviews`, {\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n        },\n    });\n  return response.data.results;\n};\n\nexport const getCreditsMovies = async id => {\n  const response = await axios.get(`${BASE_URL}movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n       page: 1,\n    },\n  });\n\n  return response.data.cast;\n};"],"names":["Title","styled","ListInfo","LinkInfo","Link","Button","CardFilms","CardInfo","poster","title","year","vote","overview","genres","src","alt","width","useState","loader","setLoader","movieId","useParams","location","useLocation","navigate","useNavigate","previousRoute","setPreviousRoute","backdrop_path","poster_path","release_date","vote_average","movieDetails","setMovieDetails","useEffect","getDetailsMovies","Object","keys","length","toast","console","log","fetchMovieDetails","state","from","slice","Math","floor","movieGenres","map","genre","name","join","type","onClick","to","Suspense","fallback","Loader","API_KEY","BASE_URL","getTrendingMovies","axios","params","api_key","language","response","data","results","getSearchMovies","query","id","getReviewsMovies","getCreditsMovies","page","cast"],"sourceRoot":""}
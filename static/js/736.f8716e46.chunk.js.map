{"version":3,"file":"static/js/736.f8716e46.chunk.js","mappings":"gQAEaA,EAAOC,EAAAA,EAAAA,GAAH,wGAOJC,EAAOD,EAAAA,EAAAA,EAAH,yF,SC0CjB,EA7Ca,WACX,IAAQE,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,WAEND,GAAW,IAEXE,EAAAA,EAAAA,IAAiBR,GACdS,MAAK,SAAAN,GACJC,EAAQD,EACT,IACAO,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EACb,IACAG,SAAQ,WACPR,GAAW,EACZ,GAIN,GAAE,CAACN,KAGF,2BACGK,IAAW,SAACU,EAAA,EAAD,KACZ,SAAClB,EAAD,UACGM,EAAKa,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,cAAeC,EAApC,EAAoCA,KAAMC,EAA1C,EAA0CA,UAA1C,OACR,2BACE,gBACEC,MAAM,QACNC,IACEL,EAAY,yCAAqCA,GAArC,6EAEdM,IAAKL,KAEP,SAACpB,EAAD,UAAOqB,KACP,UAACrB,EAAD,WAAM,cAAYsB,OATXJ,EADD,QAgBjB,C,kMChDKQ,EAAU,mCACVC,EAAW,gCAEJC,EAAiB,mCAAG,oGACNC,EAAAA,EAAAA,IAAA,UAAaF,EAAb,sBAA2C,CAC9DG,OAAQ,CACJC,QAASL,EACTM,SAAU,WAJW,cACvBC,EADuB,yBAOtBA,EAASC,KAAKC,SAPQ,2CAAH,qDAUjBC,EAAe,mCAAG,WAAMC,GAAN,uFACJR,EAAAA,EAAAA,IAAA,UAAaF,EAAb,gBAAqC,CACxDG,OAAQ,CACJC,QAASL,EACTM,SAAU,QACVK,MAAOA,KALY,cACrBJ,EADqB,yBAQpBA,EAASC,KAAKC,SARM,2CAAH,sDAWfG,EAAgB,mCAAG,WAAMpB,GAAN,uFACLW,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA8BT,GAAM,CACvDY,OAAQ,CACJC,QAASL,EACTM,SAAU,WAJU,cACtBC,EADsB,yBAOrBA,EAASC,MAPY,2CAAH,sDAUhBK,EAAgB,mCAAG,WAAMrB,GAAN,uFACLW,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA8BT,EAA9B,YAA4C,CAC/DY,OAAQ,CACJC,QAASL,EACTM,SAAU,WAJU,cACtBC,EADsB,yBAOvBA,EAASC,KAAKC,SAPS,2CAAH,sDAUhB1B,EAAgB,mCAAG,WAAMS,GAAN,uFACPW,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA8BT,EAA9B,YAA4C,CACjEY,OAAQ,CACNC,QAASL,EACTM,SAAU,QACTQ,KAAM,KALmB,cACxBP,EADwB,yBASvBA,EAASC,KAAK9B,MATS,2CAAH,qD","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","components/services/apiService.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 20px;\n`;\n\nexport const Text = styled.p`\n  font-weight: 600;\n  font-size: 15px;\n  margin-bottom: 10px;\n`;","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getCreditsMovies } from 'components/services/apiService';\nimport { Loader } from 'components/Loader/Loader';\nimport { List, Text } from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchCast = () => {\n      setLoading(true);\n\n      getCreditsMovies(movieId)\n        .then(cast => {\n          setCast(cast);\n        })\n        .catch(error => {\n          console.log(error);\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    };\n\n    fetchCast();\n  }, [movieId]);\n\n  return (\n    <div>\n      {loading && <Loader />}\n      <List>\n        {cast.map(({ id, profile_path, original_name, name, character }) => (\n          <li key={id}>\n            <img\n              width=\"200px\"\n              src={\n                profile_path ? `https://image.tmdb.org/t/p/w500${profile_path}`: `https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg`\n              }\n              alt={original_name}\n            />\n            <Text>{name}</Text>\n            <Text>Character: {character}</Text>\n          </li>\n        ))}\n      </List>\n    </div>\n  );\n};\nexport default Cast;","import axios from 'axios';\n\nconst API_KEY = 'feafde17f0d0230d9e73e9fe3d719207';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async () => {\n    const response = await axios.get(`${BASE_URL}trending/movie/day`, {\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n        },\n    });\n    return response.data.results;\n};\n\nexport const getSearchMovies = async query => {\n    const response = await axios.get(`${BASE_URL}search/movie`, {\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n            query: query,\n        },\n    });\n    return response.data.results;\n};\n\nexport const getDetailsMovies = async id => {\n    const response = await axios.get(`${BASE_URL}movie/${id}`, {\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n        },\n    });\n    return response.data;\n};\n\nexport const getReviewsMovies = async id => {\n    const response = await axios.get(`${BASE_URL}movie/${id}/reviews`, {\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n        },\n    });\n  return response.data.results;\n};\n\nexport const getCreditsMovies = async id => {\n  const response = await axios.get(`${BASE_URL}movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n       page: 1,\n    },\n  });\n\n  return response.data.cast;\n};"],"names":["List","styled","Text","movieId","useParams","useState","cast","setCast","loading","setLoading","useEffect","getCreditsMovies","then","catch","error","console","log","finally","Loader","map","id","profile_path","original_name","name","character","width","src","alt","API_KEY","BASE_URL","getTrendingMovies","axios","params","api_key","language","response","data","results","getSearchMovies","query","getDetailsMovies","getReviewsMovies","page"],"sourceRoot":""}
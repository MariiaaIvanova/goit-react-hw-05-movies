{"version":3,"file":"static/js/416.a3739c5b.chunk.js","mappings":"wKAqBA,IAnBkB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACbC,GAAWC,EAAAA,EAAAA,MAEjB,OACC,wBACIF,EAAOG,OAAS,GACfH,EAAOI,KAAI,SAAAC,GACT,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMR,GAAhD,SACGI,EAAMK,SAFFL,EAAME,GAMlB,KAGR,C,oICjBYI,E,QAAYC,EAAAA,GAAH,wH,gDCoCtB,EA/Ba,WACX,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOb,EAAP,KAAec,EAAf,KACA,GAA4BD,EAAAA,EAAAA,WAAS,GAArC,eAAOE,EAAP,KAAeC,EAAf,KAoBA,OAlBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEyBC,EAAAA,EAAAA,MAFzB,YAEUlB,EAFV,SAIoC,IAAlBA,EAAOG,OAJzB,0CAKagB,EAAAA,EAAAA,IAAM,2BALnB,OAOIL,EAAUd,GAPd,gDASIoB,QAAQC,IAAR,MATJ,yBAWIL,GAAU,GAXd,6EADc,uBAAC,WAAD,wBAedM,EACD,GAAE,KAGD,6BACE,SAACX,EAAD,UAAW,mBACVX,IAAU,SAACuB,EAAA,EAAD,CAAWvB,OAAQA,IAC7Be,IAAU,SAACS,EAAA,EAAD,MAGhB,C,kMClCKC,EAAU,mCACVC,EAAW,gCAEJR,EAAiB,mCAAG,oGACNS,EAAAA,EAAAA,IAAA,UAAaD,EAAb,sBAA2C,CAC9DE,OAAQ,CACJC,QAASJ,EACTK,SAAU,WAJW,cACvBC,EADuB,yBAOtBA,EAASC,KAAKC,SAPQ,2CAAH,qDAUjBC,EAAe,mCAAG,WAAMC,GAAN,uFACJR,EAAAA,EAAAA,IAAA,UAAaD,EAAb,gBAAqC,CACxDE,OAAQ,CACJC,QAASJ,EACTK,SAAU,QACVK,MAAOA,KALY,cACrBJ,EADqB,yBAQpBA,EAASC,KAAKC,SARM,2CAAH,sDAWfG,EAAgB,mCAAG,WAAM7B,GAAN,uFACLoB,EAAAA,EAAAA,IAAA,UAAaD,EAAb,iBAA8BnB,GAAM,CACvDqB,OAAQ,CACJC,QAASJ,EACTK,SAAU,WAJU,cACtBC,EADsB,yBAOrBA,EAASC,MAPY,2CAAH,sDAUhBK,EAAgB,mCAAG,WAAM9B,GAAN,uFACLoB,EAAAA,EAAAA,IAAA,UAAaD,EAAb,iBAA8BnB,EAA9B,YAA4C,CAC/DqB,OAAQ,CACJC,QAASJ,EACTK,SAAU,WAJU,cACtBC,EADsB,yBAOvBA,EAASC,KAAKC,SAPS,2CAAH,sDAUhBK,EAAgB,mCAAG,WAAM/B,GAAN,uFACPoB,EAAAA,EAAAA,IAAA,UAAaD,EAAb,iBAA8BnB,EAA9B,YAA4C,CACjEqB,OAAQ,CACNC,QAASJ,EACTK,SAAU,QACTS,KAAM,KALmB,cACxBR,EADwB,yBASvBA,EAASC,KAAKQ,MATS,2CAAH,qD","sources":["components/MovieList/MovieList.jsx","components/pages/Home.styled.jsx","components/pages/Home.jsx","components/services/apiService.jsx"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n   <ul>\n      {movies.length > 0 &&\n        movies.map(movie => {\n          return (\n            <li key={movie.id}>\n              <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </Link>\n            </li>\n          );\n        })}\n    </ul>\n  );\n};\n\nexport default MovieList;\n","import styled from '@emotion/styled';\n\nexport const HomeTitle = styled.h1`\n  font-size: 40px;\n  line-height: calc(14 / 48);\n  margin-bottom: 35px;\n  margin-top: 20px;\n`;","import { useEffect, useState } from 'react';\nimport { HomeTitle } from './Home.styled';\nimport { getTrendingMovies } from 'components/services/apiService';\nimport { Loader } from 'components/Loader/Loader';\nimport MovieList from 'components/MovieList/MovieList';\nimport { toast } from 'react-hot-toast';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [loader, setLoader] = useState(true);\n\n  useEffect(() => {\n    async function getListMovies() {\n      try {\n        const movies = await getTrendingMovies();\n\n        if (movies && movies.length === 0) {\n          return toast('Sorry, try again later');\n        }\n        setMovies(movies);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoader(false);\n      }\n    }\n    getListMovies();\n  }, []);\n\n  return (\n    <main>\n      <HomeTitle>Trending today</HomeTitle>\n      {movies && <MovieList movies={movies} />}\n      {loader && <Loader />}\n    </main>\n  );\n}\n\nexport default Home;\n\n\n\n\n","import axios from 'axios';\n\nconst API_KEY = 'feafde17f0d0230d9e73e9fe3d719207';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async () => {\n    const response = await axios.get(`${BASE_URL}trending/movie/day`, {\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n        },\n    });\n    return response.data.results;\n};\n\nexport const getSearchMovies = async query => {\n    const response = await axios.get(`${BASE_URL}search/movie`, {\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n            query: query,\n        },\n    });\n    return response.data.results;\n};\n\nexport const getDetailsMovies = async id => {\n    const response = await axios.get(`${BASE_URL}movie/${id}`, {\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n        },\n    });\n    return response.data;\n};\n\nexport const getReviewsMovies = async id => {\n    const response = await axios.get(`${BASE_URL}movie/${id}/reviews`, {\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n        },\n    });\n  return response.data.results;\n};\n\nexport const getCreditsMovies = async id => {\n  const response = await axios.get(`${BASE_URL}movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n       page: 1,\n    },\n  });\n\n  return response.data.cast;\n};"],"names":["movies","location","useLocation","length","map","movie","to","id","state","from","title","HomeTitle","styled","useState","setMovies","loader","setLoader","useEffect","getTrendingMovies","toast","console","log","getListMovies","MovieList","Loader","API_KEY","BASE_URL","axios","params","api_key","language","response","data","results","getSearchMovies","query","getDetailsMovies","getReviewsMovies","getCreditsMovies","page","cast"],"sourceRoot":""}
{"version":3,"file":"static/js/387.62f7e9ef.chunk.js","mappings":"oPAEaA,E,QAAOC,EAAAA,GAAH,+F,SCiDjB,EA7CgB,WACd,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BH,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,WAEND,GAAW,IAEXE,EAAAA,EAAAA,IAAiBL,GACdM,MAAK,SAAAR,GACJC,EAAWD,EACZ,IACAS,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EACb,IACAG,SAAQ,WACPR,GAAW,EACZ,GAIN,GAAE,CAACH,KAGF,gCACGE,IAAW,SAACU,EAAA,EAAD,IACQ,IAAnBd,EAAQe,SACP,0BACE,SAAClB,EAAD,UACGG,EAAQgB,KAAI,SAAAC,GAAM,OACjB,2BACE,0BAAI,WAASA,EAAOC,WACpB,uBAAID,EAAOE,YAFJF,EAAOG,GADC,QASL,IAAnBpB,EAAQe,SACP,yBAAK,2CAIZ,C,kMChDKM,EAAU,mCACVC,EAAW,gCAEJC,EAAiB,mCAAG,oGACNC,EAAAA,EAAAA,IAAA,UAAaF,EAAb,sBAA2C,CAC9DG,OAAQ,CACJC,QAASL,EACTM,SAAU,WAJW,cACvBC,EADuB,yBAOtBA,EAASC,KAAKC,SAPQ,2CAAH,qDAUjBC,EAAe,mCAAG,WAAMC,GAAN,uFACJR,EAAAA,EAAAA,IAAA,UAAaF,EAAb,gBAAqC,CACxDG,OAAQ,CACJC,QAASL,EACTM,SAAU,QACVK,MAAOA,KALY,cACrBJ,EADqB,yBAQpBA,EAASC,KAAKC,SARM,2CAAH,sDAWfG,EAAgB,mCAAG,WAAMb,GAAN,uFACLI,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA8BF,GAAM,CACvDK,OAAQ,CACJC,QAASL,EACTM,SAAU,WAJU,cACtBC,EADsB,yBAOrBA,EAASC,MAPY,2CAAH,sDAUhBtB,EAAgB,mCAAG,WAAMa,GAAN,uFACLI,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA8BF,EAA9B,YAA4C,CAC/DK,OAAQ,CACJC,QAASL,EACTM,SAAU,WAJU,cACtBC,EADsB,yBAOvBA,EAASC,KAAKC,SAPS,2CAAH,sDAUhBI,EAAgB,mCAAG,WAAMd,GAAN,uFACPI,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA8BF,EAA9B,YAA4C,CACjEK,OAAQ,CACNC,QAASL,EACTM,SAAU,QACTQ,KAAM,KALmB,cACxBP,EADwB,yBASvBA,EAASC,KAAKO,MATS,2CAAH,qD","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","components/services/apiService.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  list-style-type: none;\n  margin-left: 20px;\n  margin-right: 20px;\n`;","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\nimport { getReviewsMovies } from 'components/services/apiService';\nimport { List } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n       const fetchReviews = () => {\n      setLoading(true);\n\n      getReviewsMovies(movieId)\n        .then(reviews => {\n          setReviews(reviews);\n        })\n        .catch(error => {\n          console.log(error);\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    };\n\n    fetchReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      {loading && <Loader />}\n      {reviews.length !== 0 && (\n        <div>\n          <List>\n            {reviews.map(review => (\n              <li key={review.id}>\n                <h3>Author: {review.author}</h3>\n                <p>{review.content}</p>\n              </li>\n            ))}\n          </List>\n        </div>\n      )}\n      {reviews.length === 0 && (\n        <div>We don't have reviews for this movie</div>\n      )}\n    </>\n  );\n};\nexport default Reviews;","import axios from 'axios';\n\nconst API_KEY = 'feafde17f0d0230d9e73e9fe3d719207';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async () => {\n    const response = await axios.get(`${BASE_URL}trending/movie/day`, {\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n        },\n    });\n    return response.data.results;\n};\n\nexport const getSearchMovies = async query => {\n    const response = await axios.get(`${BASE_URL}search/movie`, {\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n            query: query,\n        },\n    });\n    return response.data.results;\n};\n\nexport const getDetailsMovies = async id => {\n    const response = await axios.get(`${BASE_URL}movie/${id}`, {\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n        },\n    });\n    return response.data;\n};\n\nexport const getReviewsMovies = async id => {\n    const response = await axios.get(`${BASE_URL}movie/${id}/reviews`, {\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n        },\n    });\n  return response.data.results;\n};\n\nexport const getCreditsMovies = async id => {\n  const response = await axios.get(`${BASE_URL}movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n       page: 1,\n    },\n  });\n\n  return response.data.cast;\n};"],"names":["List","styled","useState","reviews","setReviews","movieId","useParams","loading","setLoading","useEffect","getReviewsMovies","then","catch","error","console","log","finally","Loader","length","map","review","author","content","id","API_KEY","BASE_URL","getTrendingMovies","axios","params","api_key","language","response","data","results","getSearchMovies","query","getDetailsMovies","getCreditsMovies","page","cast"],"sourceRoot":""}
{"version":3,"file":"static/js/142.2d80809f.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.jsx","components/SearchContainer/SearchContainer.styled.js","components/SearchContainer/SearchContainer.jsx","components/pages/Movies.jsx","components/services/apiService.jsx"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n   <ul>\n      {movies.length > 0 &&\n        movies.map(movie => {\n          return (\n            <li key={movie.id}>\n              <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </Link>\n            </li>\n          );\n        })}\n    </ul>\n  );\n};\n\nexport default MovieList;\n","import styled from '@emotion/styled';\n\nexport const SearchForm = styled.form`\n  padding: 10px;\n  margin-bottom: 20px;\n`;\nexport const SearchButton = styled.button`\n  padding: 5px 5px;\n  margin-right: 15px;\n  cursor: pointer;\n  border-radius: 10px;\n  &:hover {\n    background-color: #ffe53b;\n    \n  }\n`;\nexport const BtnSpan = styled.span`\n`;\nexport const SearchInput = styled.input`\n  padding: 5px 5px;\n  border-radius: 10px;\n  outline: none;\n`;","import { useState } from 'react';\nimport {\n  SearchForm,\n  SearchButton,\n  BtnSpan,\n  SearchInput,\n} from './SearchContainer.styled';\nimport { toast } from 'react-hot-toast';\n\nexport const SearchContainer = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    const searchQuery = query.toLocaleLowerCase().trim();\n    if (searchQuery === '') {\n      return toast.error(\"It cannot be empty query! Please, enter movie name.\");\n    }\n    onSubmit(searchQuery);\n    setQuery('');\n  };\n\n  return (\n    <SearchForm onSubmit={onFormSubmit}>\n      <SearchButton type=\"submit\">\n        <BtnSpan>Search</BtnSpan>\n      </SearchButton>\n      <SearchInput\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n        value={query}\n        onChange={e => setQuery(e.target.value)}\n      />\n    </SearchForm>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport  MovieList  from 'components/MovieList/MovieList';\nimport { SearchContainer } from 'components/SearchContainer/SearchContainer';\nimport { toast } from 'react-hot-toast';\nimport { Loader } from 'components/Loader/Loader';\nimport { getSearchMovies } from 'components/services/apiService';\n\nexport default function Movies() {\n  const [movies, setMovies] = useState([]);\n  const [loader, setLoader] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const searchQuery = searchParams.get('query') ?? '';\n\n  const updateQueryString = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  useEffect(() => {\n    if (searchQuery === '') {\n      return;\n    }\n\n    async function fechMovies() {\n      try {\n        const movies = await getSearchMovies(searchQuery);\n        if (movies.length === 0) {\n          return toast.error('Movie Not Found');\n        }\n        setMovies(movies);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoader(false);\n      }\n    }\n    setLoader(true);\n    fechMovies();\n  }, [searchQuery]);\n\n  return (\n    <>\n      <main>\n        <SearchContainer onSubmit={updateQueryString} />\n        {movies && <MovieList movies={movies} />}\n      </main>\n      {loader && <Loader />}\n    </>\n  );\n}","import axios from 'axios';\n\nconst API_KEY = 'feafde17f0d0230d9e73e9fe3d719207';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async () => {\n    const response = await axios.get(`${BASE_URL}trending/movie/day`, {\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n        },\n    });\n    return response.data.results;\n};\n\nexport const getSearchMovies = async query => {\n    const response = await axios.get(`${BASE_URL}search/movie`, {\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n            query: query,\n        },\n    });\n    return response.data.results;\n};\n\nexport const getDetailsMovies = async id => {\n    const response = await axios.get(`${BASE_URL}movie/${id}`, {\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n        },\n    });\n    return response.data;\n};\n\nexport const getReviewsMovies = async id => {\n    const response = await axios.get(`${BASE_URL}movie/${id}/reviews`, {\n        params: {\n            api_key: API_KEY,\n            language: 'en-US',\n        },\n    });\n  return response.data.results;\n};\n\nexport const getCreditsMovies = async id => {\n  const response = await axios.get(`${BASE_URL}movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n       page: 1,\n    },\n  });\n\n  return response.data.cast;\n};"],"names":["movies","location","useLocation","length","map","movie","to","id","state","from","title","SearchForm","styled","SearchButton","BtnSpan","SearchInput","SearchContainer","onSubmit","useState","query","setQuery","e","preventDefault","searchQuery","toLocaleLowerCase","trim","toast","type","autoComplete","autoFocus","placeholder","value","onChange","target","Movies","setMovies","loader","setLoader","useSearchParams","searchParams","setSearchParams","get","useEffect","getSearchMovies","console","log","fechMovies","MovieList","Loader","API_KEY","BASE_URL","getTrendingMovies","axios","params","api_key","language","response","data","results","getDetailsMovies","getReviewsMovies","getCreditsMovies","page","cast"],"sourceRoot":""}